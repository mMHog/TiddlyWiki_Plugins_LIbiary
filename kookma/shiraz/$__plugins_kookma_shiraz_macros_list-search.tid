author: Jeremy Ruston
description: creates few paragraphs of dumy text
tags: $:/tags/Macro
title: $:/plugins/kookma/shiraz/macros/list-search
type: text/vnd.tiddlywiki

\define list-search( filter:"[!is[system]]", search:"search:title", template:"$:/core/ui/ListItemTemplate",
 class:"my-3", stateTiddler:"", placeholder:"keywords")
<$set name="state" filter="[[$:/temp/list-search/]addsuffix<__stateTiddler__>addsuffix<qualify>]">
<div class=<<__class__>> >
<$keyboard key="escape" actions='<$action-deletetiddler $tiddler=<<state>>/>' >
<$edit-text tiddler=<<state>> type="search" tag="input" default="" placeholder="$placeholder$" class="w-100"/>
</$keyboard>
</div>
<$reveal stateTitle=<<state>> stateField=text type="match" text="" class=<<__class__>> tag=div>
<$list filter=<<__filter__>> template=<<__template__>>/>
</$reveal>
<$reveal stateTitle=<<state>> stateField=text type="nomatch" text="" class=<<__class__>> tag=div>
<$let term={{{ [<state>get[text]] }}}
      sub= {{{ "[" [<__search__>] "<term>]" :and[join[]] }}} ><!-- this line creates a dynamic filter and stores in a string variable-->
<$list filter="[subfilter<__filter__>]:and[subfilter<sub>]" template=<<__template__>>/>
</$let>
</$reveal>
</$set>
\end
<!-- from Tobias Beer list-search with modification
The old style dynamic filters are:
1. <$list filter="$filter$+[$search$<term>]" template=<<__template__>>/>
2. <$list filter="$filter$" template=<<__template__>>/>
The new style is: not to use text substitution
-->